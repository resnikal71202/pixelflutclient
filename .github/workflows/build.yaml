name: Build Program

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Update submodules
      run: git submodule update --init --recursive

    - name: Set up build environment on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

    - name: Set up build environment on macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install gcc
        brew tap messense/macos-cross-toolchains
        brew install aarch64-unknown-linux-gnu

    - name: Set up build environment on Windows
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Build for x86 on Linux and macOS
      if: matrix.arch == 'x64' && matrix.os != 'windows-latest'
      run: gcc -Wall -O0 client.c -lm -lpthread -o client

    - name: Build for ARM on Linux
      if: matrix.arch == 'arm64' && matrix.os == 'ubuntu-latest'
      run: aarch64-linux-gnu-gcc -Wall -O0 client.c -lm -lpthread -o client-arm

    - name: Build for ARM on macOS
      if: matrix.arch == 'arm64' && matrix.os == 'macos-latest'
      run: aarch64-unknown-linux-gnu-gcc -Wall -O0 client.c -lm -lpthread -o client-arm

    - name: Build for x86 on Windows
      if: matrix.arch == 'x64' && matrix.os == 'windows-latest'
      run: |
        cl /W4 /O2 /Fe:client.exe client.c

    - name: Skip ARM build on Windows
      if: matrix.arch == 'arm64' && matrix.os == 'windows-latest'
      run: echo "ARM build not supported on Windows"

    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}
        path: |
          client.exe
          client
          client-arm
